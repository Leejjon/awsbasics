https://www.youtube.com/watch?v=hiKPPy584Mg&t=76s
https://docs.aws.amazon.com/vpc/latest/userguide/vpc-subnets-commands-example.html#vpc-subnets-commands-example-public-subnet

https://docs.google.com/drawings/d/e/2PACX-1vR8eGG3DRvl4-TZhmFpcb2X79YF-2kN43Aruhyxvna6qEQI6h7JDq90RaQQz0VsM-RhuZDMENTTg9li/pub?w=960&h=720

aws init = set up connection
aws iam get-user = show what user is currently used

// List all vpcs
aws ec2 describe-vpcs

// Create VPC
aws ec2 create-vpc --cidr-block 172.31.0.0/16

// Delete VPC
aws ec2 delete-vpc --vpc-id <id>

// Give VPC a name
aws ec2 create-tags --resources vpc-04f53b26552a874ba --tags Key=Name,Value=basic-vpc

// Show the three different availability zones of eu-central-1
aws ec2 describe-availability-zones

// List subnets (you'll also see the subnets of the default vpc, ignore them)
aws ec2 describe-subnets

// List subnets by vpc id
aws ec2 describe-subnets --filters Name=vpc-id,Values=vpc-04f53b26552a874ba

// Create public subnets in two of these three, two is fine enough for our demo purposes.
aws ec2 create-subnet --cidr-block 172.31.0.0/24 --vpc-id vpc-04f53b26552a874ba --availability-zone-id euc1-az2
aws ec2 create-subnet --cidr-block 172.31.1.0/24 --vpc-id vpc-04f53b26552a874ba --availability-zone-id euc1-az3

// Giving subnets name tags
aws ec2 create-tags --resources subnet-0d0ef1f270d7f4f74 --tags Key=Name,Value=public-subnet-a
aws ec2 create-tags --resources subnet-0a04f996d4d867e76 --tags Key=Name,Value=public-subnet-b

// List internet gateways
aws ec2 describe-internet-gateways

// Create an internet gateway
aws ec2 create-internet-gateway
aws ec2 create-tags --resources igw-0bf1d2d1486b2aa1e --tags Key=Name,Value=internet-gateway

// Attach it to our VPC
aws ec2 attach-internet-gateway --vpc-id vpc-04f53b26552a874ba --internet-gateway-id igw-0bf1d2d1486b2aa1e

// Creating a route table for the public subnets
aws ec2 create-route-table --vpc-id vpc-04f53b26552a874ba
aws ec2 create-tags --resources rtb-0bbdd585c1ec7dc9c --tags Key=Name,Value=public-route-table
aws ec2 create-route --route-table-id rtb-0bbdd585c1ec7dc9c --destination-cidr-block 0.0.0.0/0 --gateway-id igw-0bf1d2d1486b2aa1e

// Attach the route tables
aws ec2 associate-route-table --subnet-id subnet-0d0ef1f270d7f4f74 --route-table-id rtb-0bbdd585c1ec7dc9c
aws ec2 associate-route-table --subnet-id subnet-0a04f996d4d867e76 --route-table-id rtb-0bbdd585c1ec7dc9c

// Give everything in subnet a public ip:
aws ec2 modify-subnet-attribute --subnet-id subnet-0d0ef1f270d7f4f74 --map-public-ip-on-launch
aws ec2 modify-subnet-attribute --subnet-id subnet-0a04f996d4d867e76 --map-public-ip-on-launch

// Create EC2 instance
aws ec2 create-key-pair --key-name key-pair-for-instance1 --query 'KeyMaterial' --output text > key-pair-for-instance1.pem
aws ec2 create-key-pair --key-name key-pair-for-instance2 --query 'KeyMaterial' --output text > key-pair-for-instance2.pem

chmod 400 key-pair-for-instance1.pem

// Create security group in VPC and add rule for allowing ssh
aws ec2 describe-security-groups
aws ec2 create-security-group --group-name SSHAccess --description "Security group for SSH access" --vpc-id vpc-04f53b26552a874ba
aws ec2 authorize-security-group-ingress --group-id sg-0803abdcc8730b0ea --protocol tcp --port 22 --cidr 86.95.93.135/32
aws ec2 authorize-security-group-ingress --group-id sg-0803abdcc8730b0ea --protocol tcp --port 80 --cidr 0.0.0.0/0

// Create ec2 instance ami-043097594a7df80ec
aws ec2 run-instances --image-id ami-043097594a7df80ec --count 1 --instance-type t2.micro --key-name key-pair-for-instance1 --security-group-ids sg-0803abdcc8730b0ea --subnet-id subnet-0d0ef1f270d7f4f74

// SSH into
ssh -i key-pair-for-instance1.pem ec2-user@xx.xx.xx.xx

aws ec2 describe-internet-gateways

// Note that the vpc always has a default route table
aws ec2 describe-route-tables
aws ec2 describe-route-tables --route-table-id rtb-0bbdd585c1ec7dc9c

aws ec2 terminate-instances --instance-ids i-08836a4a3b8e1d808
aws ec2 delete-key-pair --key-name key-pair-for-instance1

// Delete everything again
aws ec2 delete-internet-gateway --internet-gateway-id igw-0bf1d2d1486b2aa1e
aws ec2 delete-route-table --route-table-id rtb-0bbdd585c1ec7dc9c
